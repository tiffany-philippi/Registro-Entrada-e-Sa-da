create table resp (
cpf_resp varchar (14) PRIMARY KEY,
nome_resp varchar(50),
endereco_resp varchar(50),
telefone_resp varchar(11),
email_resp varchar(50));

create table aluno (
matricula varchar(10) PRIMARY KEY,
cpf_resp varchar(14),
telefone_resp varchar(11),
nome_aluno varchar(50),
endereco_aluno varchar(50),
email_aluno varchar(50),
periodo varchar(15),
cursando varchar(3),
transp_publico varchar(3),
FOREIGN KEY (cpf_resp) REFERENCES resp(cpf_resp),
ON DELETE CASCADE,
ON UPDATE CASCADE);

create table funcionario (
cod_func int auto_increment PRIMARY KEY,
nome_func varchar(50),
email_func vvarchar(50),
endereco_func varchar(50),
empregado varchar(3),
carga_horaria int);

create table autorizacao (
cod_autorizacao int auto_increment PRIMARY KEY,
matricula varchar(10),
data_autor date,
time_autor time,
tipo_autorizacao varchar(15),
passagem varchar(15),
FOREIGN KEY (matricula) REFERENCES alunos (matricula));

create table registro (
cod_registro int auto_increment PRIMARY KEY,
cod_autorizacao int,
cod_func int,
matricula varchar(10),
passagem varchar(15),
data_autorizacao datetime,
FOREIGN KEY (cod_autorizacao) REFERENCES autorizacao (cod_autorizacao),
FOREIGN KEY (cod_func) REFERENCES funcionario (cod_func),
FOREIGN KEY (matricula) REFERENCES alunos (matricula));

Table registro para Java

create table prontuario (
cod_pront int auto_increment PRIMARY KEY,
matricula varchar(10),
passagem varchar(7),
data_pront date,
time_pront time,
FOREIGN KEY (matricula) REFERENCES alunos (matricula));
